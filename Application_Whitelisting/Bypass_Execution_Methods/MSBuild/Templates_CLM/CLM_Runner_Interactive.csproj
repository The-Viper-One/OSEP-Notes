<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<Target Name="Execute_CLM_Runner_Interactive">
<CLM_Runner_Interactive />
</Target>
<UsingTask TaskName="CLM_Runner_Interactive" TaskFactory="CodeTaskFactory" AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll">
<Task>
<Reference Include="System.Management.Automation" />
<Code Type="Class" Language="cs">
<![CDATA[

using System;
using System.Linq;
using System.Management.Automation;
using System.Management.Automation.Runspaces;
using Microsoft.Build.Framework;
using Microsoft.Build.Utilities;

public class CLM_Runner_Interactive : Task
{
  public override bool Execute()
  {
    using (var runspace = RunspaceFactory.CreateRunspace())
    {
      runspace.Open();

      using (var PWSH = PowerShell.Create())
      {
        PWSH.Runspace = runspace;

        while (true)
        {
          Console.Write("PS> ");
          string input = Console.ReadLine();

          if (string.IsNullOrWhiteSpace(input))
            continue;

          if (input.Trim().ToLower() == "exit")
            break;

          try
          {
            PWSH.Commands.Clear();
            PWSH.AddScript(input);
            var results = PWSH.Invoke();

            if (PWSH.Streams.Error.Count > 0)
            {
              foreach (var error in PWSH.Streams.Error)
              {
                Console.WriteLine("Error: " + error.ToString());
              }
              PWSH.Streams.Error.Clear();
            }
            else
            {
              foreach (var result in results)
              {
                Console.WriteLine(result.ToString());
              }
            }
          }
          catch (Exception ex)
          {
            Console.WriteLine("Exception: " + ex.Message);
          }
        }
      }
    }

    return true;
  }
}

]]>
</Code>
</Task>
</UsingTask>
</Project>
